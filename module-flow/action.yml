name: '🎛️ Module FLOW'
description: 'Fluxo de atualização do Modulo'
inputs:
  release_branch:
    description: 'Branch de release'
    required: true
  github_token:
    description: 'Token de acesso ao Github'
    required: true
runs:
  using: 'composite'
  steps:
    - name: 🔒 Verificar GitHub Token
      run: |
        if [ -z "${{ inputs.github_token }}" ]; then
          echo "GitHub Token não fornecido."
          exit 1
        else
          echo "GitHub Token está presente."
        fi
      shell: bash

    - name: 🚚 Atualizando projeto
      uses: actions/checkout@v3
      with:
        repository: GEDPaciente/mv-ged-workspace
        token: ${{ inputs.github_token }}
        submodules: true
        ref: ${{ github.ref }}

    - name: 📝 Obtem a Versão do workspace
      id: get_actual_version
      run: |
        echo "Obtendo versão do pom.xml"
        ACTUAL_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "::set-output name=version::$ACTUAL_VERSION"
      shell: bash

    - name: 📝 Gera a nova versão
      id: get_new_version
      uses: GedPaciente/workflows/get-and-check-version
      with:
        release_branch: ${{ inputs.release_branch }}

    - name: 📝 Atualiza a versão no pom.xml
      run: |
        echo "Atualizando versão no pom.xml"
        mvn versions:set -DnewVersion=${{ steps.get_new_version.outputs.version }} -DgenerateBackupPoms=false
      shell: bash

    - name: Apresenta nova versão
      run: |
        ACTUAL_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "Nova versão do projeto: $ACTUAL_VERSION"
      shell: bash
