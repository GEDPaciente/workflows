name: '🎛️ Build Modulo'
description: 'Fluxo de atualização do Modulo'
inputs:
  github_token:
    description: 'Token de acesso ao GitHub'
    required: true
outputs:
  module_version:
    description: 'Versão do Modulo'
    value: ${{ steps.get_version.outputs.version }}

runs:
  using: 'composite'
  steps:
    - name: 🔒 Verificar GitHub Token
      run: |
        if [ -z "${{ inputs.github_token }}" ]; then
          echo "GitHub Token não fornecido."
          exit 1
        else
          echo "GitHub Token está presente."
        fi
      shell: bash

    - name: 'Checkout Parent Repository com Submódulos'
      uses: actions/checkout@v3
      with:
        repository: GEDPaciente/mv-ged-parent
        token: ${{ inputs.github_token }}
        path: parent

    - name: 'Set up JDK 17'
      uses: actions/setup-java@v4
      with:
        distribution: 'corretto'
        java-version: '17'

    - name: 'Identificar Nome do Submódulo pelo Repositório'
      id: identify_module
      run: |
        cd parent
        REPO_NAME=$(basename -s .git $(git config --get remote.origin.url))
        echo "Repositório atual: $REPO_NAME"
        MODULE_PATH=$(git config -f .gitmodules --get-regexp "path" | grep "$REPO_NAME" | awk '{print $2}')
        if [ -z "$MODULE_PATH" ]; then
          echo "Módulo correspondente ao repositório '$REPO_NAME' não encontrado."
          exit 1
        fi
        echo "Submódulo identificado: $MODULE_PATH"
        echo "module_path=$MODULE_PATH" >> $GITHUB_ENV
      shell: bash

    - name: 'Inicializar e Atualizar Submódulo Identificado'
      run: |
        cd parent
        git submodule update --init --recursive ${{ env.module_path }}
        cd ..
      shell: bash

    - name: 'Buildar o Módulo'
      run: |
        cd parent/${{ env.module_path }}
        echo "Iniciando build do módulo identificado: ${{ env.module_path }}"
        mvn clean install -DskipTests -q
        echo "Build do módulo '${{ env.module_path }}' concluído."
        cd ../..
      shell: bash

    - name: 'Verificar versão do módulo'
      id: get_version
      run: |
        cd parent/${{ env.module_path }}
        CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "Versão do módulo '${{ env.module_path }}': $CURRENT_VERSION"
        echo "module_version=$CURRENT_VERSION" >> $GITHUB_ENV
      shell: bash
