name: 'üéõÔ∏è Build Modulo'
description: 'Fluxo de atualiza√ß√£o do Modulo'
inputs:
  github_token:
    description: 'Token de acesso ao GitHub'
    required: true
outputs:
  module_version:
    description: 'Vers√£o do Modulo'
    value: ${{ steps.get_version.outputs.version }}
  core_version:
    description: 'Vers√£o do GED-CORE'
    value: ${{ steps.build-core.outputs.core_version }}
runs:
  using: 'composite'
  steps:
    - name: üîí Verificar GitHub Token
      run: |
        if [ -z "${{ inputs.github_token }}" ]; then
          echo "GitHub Token n√£o fornecido."
          exit 1
        else
          echo "GitHub Token est√° presente."
        fi
      shell: bash

    - name: 'Build Core'
      id: build-core
      uses: GEDPaciente/workflows/build-core@main
      with:
        github_token: ${{ inputs.github_token }}

    - name: üöö Atualizando projeto
      uses: actions/checkout@v3
      with:
        path: module

    - name: 'Set up JDK 17'
      uses: actions/setup-java@v4
      with:
        distribution: 'corretto'
        java-version: '17'
        
    - name: 'Listing all folders'
      run: ls
      shell: bash
      
    - name: 'Altera vers√£o do GED CORE do modulo'
      run: |
        cd module
        echo "Atualizando vers√£o do GED CORE para $core_version"
        mvn versions:set-property -Dproperty="ged.core.version" -DnewVersion="$core_version" -DgenerateBackupPoms=false -B
      shell: bash
    
    - name: 'Verificar vers√£o'
      id: get_version
      run: |
        CURRENT_VERSION=$(mvn help:evaluate -Dexpression="project.version" -q -DforceStdout)
        echo "Vers√£o do Modulo: $CURRENT_VERSION"
        echo "module_version=$CURRENT_VERSION" >> $GITHUB_ENV
      shell: bash    

    - name: 'Build'
      run: mvn clean install -N -q
      shell: bash

    - name: 'Obtem vers√£o atual do core no projeto'
      run: |
        VERSION=$(mvn help:evaluate -Dexpression="ged.core.version" -q -DforceStdout)

        echo "Vers√£o do GED CORE: $VERSION"
        
        if [ -z "$VERSION" ]; then
          echo "Vers√£o do GED CORE n√£o encontrada."
          exit 1
        fi

        if [ "$VERSION" == "$core_version" ]; then
          echo "Vers√£o do GED CORE j√° √© $CORE_LATEST. Nenhuma atualiza√ß√£o necess√°ria."
          echo "skip_commit=true" >> $GITHUB_ENV
        fi

        echo "atual_core_version=$VERSION" >> $GITHUB_ENV
      shell: bash

    - name: Commit
      if: env.skip_commit != 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        git add pom.xml
        git commit -m "Atualiza vers√£o do CORE para $core_version"
        git push
      shell: bash

    
