name: '🎛️ Build Modulo'
description: 'Fluxo de atualização do Modulo'
inputs:
  github_token:
    description: 'Token de acesso ao GitHub'
    required: true
outputs:
  module_version:
    description: 'Versão do Modulo'
    value: ${{ steps.get_version.outputs.version }}
  core_version:
    description: 'Versão do GED-CORE'
    value: ${{ steps.build-core.outputs.core_version }}
runs:
  using: 'composite'
  steps:
    - name: 🔒 Verificar GitHub Token
      run: |
        if [ -z "${{ inputs.github_token }}" ]; then
          echo "GitHub Token não fornecido."
          exit 1
        else
          echo "GitHub Token está presente."
        fi
      shell: bash

    - name: 'Build Core'
      id: build-core
      uses: ./build-core
      with:
        github_token: ${{ inputs.github_token }}

    - name: 🚚 Atualizando projeto
      uses: actions/checkout@v3

    - name: 'Set up JDK 17'
      uses: actions/setup-java@v4
      with:
        distribution: 'corretto'
        java-version: '17'

    - name: 'Altera versão do GED CORE'
      run: |
        echo "Atualizando versão do GED CORE para $VERSION"
        mvn versions:set-property -Dproperty="ged.core.version" -DnewVersion="$VERSION"
      shell: bash
      env:
        VERSION: ${{ steps.build-core.outputs.core_version }}

    - name: 'Build'
      run: mvn clean install -N
      shell: bash

    - name: 'Verificar versão'
      id: get_version
      run: |
        CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "Versão do Modulo: $CURRENT_VERSION"
        echo "module_version=$CURRENT_VERSION" >> $GITHUB_ENV
      shell: bash

    