name: '🎛️ Build Modulo'
description: 'Fluxo de atualização do Modulo'
inputs:
  github_token:
    description: 'Token de acesso ao GitHub'
    required: true
  module_name:
    description: 'Nome do módulo a ser buildado'
    required: true
outputs:
  module_version:
    description: 'Versão do Modulo'
    value: ${{ steps.get_version.outputs.version }}

runs:
  using: 'composite'
  steps:
    - name: 🔒 Verificar GitHub Token
      run: |
        if [ -z "${{ inputs.github_token }}" ]; then
          echo "GitHub Token não fornecido."
          exit 1
        else
          echo "GitHub Token está presente."
        fi
      shell: bash

    - name: 'Checkout Parent Repository com Submódulos'
      uses: actions/checkout@v3
      with:
        repository: GEDPaciente/mv-ged-parent
        token: ${{ inputs.github_token }}
        path: parent
        submodules: recursive

    - name: 'Set up JDK 17'
      uses: actions/setup-java@v4
      with:
        distribution: 'corretto'
        java-version: '17'

    - name: 'Build Parent sem Submódulos'
      run: |
        cd parent
        echo "Iniciando build do parent sem submódulos"
        mvn clean install -N -q
        echo "Build do parent concluído sem incluir submódulos"
      shell: bash

    - name: 'Atualizar e Inicializar Submódulos'
      run: |
        cd parent
        git submodule update --init --recursive
        cd ${{ inputs.module_name }}
        git pull
        git checkout ${{ github.ref }}
        echo "Submódulo '${{ inputs.module_name }}' atualizado."
      shell: bash

    - name: 'Buildar o Módulo'
      run: |
        cd parent/${{ inputs.module_name }}
        echo "Iniciando build do módulo específico: ${{ inputs.module_name }}"
        mvn clean install -DskipTests -q
        echo "Build do módulo '${{ inputs.module_name }}' concluído."
      shell: bash

    - name: 'Verificar versão do módulo'
      id: get_version
      run: |
        cd parent/${{ inputs.module_name }}
        CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "Versão do módulo '${{ inputs.module_name }}': $CURRENT_VERSION"
        echo "module_version=$CURRENT_VERSION" >> $GITHUB_ENV
      shell: bash