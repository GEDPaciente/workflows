name: 'üéõÔ∏è Atualizar Vers√£o'
description: 'Atualiza a vers√£o no package.json e realiza um commit.'
inputs:
  version:
    description: 'Nova vers√£o para ser definida no package.json.'
    required: true
runs:
  using: 'composite'
  steps:
    - name: 'Checkout Workspace Repository'
        uses: actions/checkout@v3
        with:
          repository: GedPaciente/mv-ged-workspace
          token: ${{ secrets.GED_PAT }}
          path: workspace
          ref: ${{ github.ref }}
        
    - name: 'Set up JDK 17'
      uses: actions/setup-java@v4
      with:
        distribution: 'corretto'
        java-version: '17'
        
    - name: 'Build Workspace'
      run: |
        cd workspace
        mvn clean install -N
        cd ..

    - name: üöö Checkout Project
      uses: actions/checkout@v3

    - name: Install Maven
      run: sudo apt-get install -y maven
      shell: bash

    - name: Verificar vers√£o
      run: |
        mvn help:evaluate -Dexpression=project.version -q -DforceStdout
      shell: bash

    - name: üìù Update Version
      run: |
        echo "Atualizando vers√£o para ${{ inputs.version }}"
        mvn versions:set -DnewVersion=${{ inputs.version }} -DgenerateBackupPoms=false
        
        if [ -f package.json ]; then
          echo "Atualizando vers√£o no package.json"
          jq --arg version "${{ inputs.version }}" '.version = $version' package.json > package.json.tmp
          mv package.json.tmp package.json
        fi
        git diff        
      shell: bash

    - name: Commit
      if:  1 == 0
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        git add pom.xml
        
        if [ -f package.json ]; then
          git add package.json
        fi
        
        git commit -m "RELEASE-${{ inputs.version_semantic }}"
        git push
        echo "Vers√£o atualizada para ${{ inputs.version }}"
      shell: bash
      env:
        VERSION: ${{ inputs.version }}
