name: 'üéõÔ∏è Build Parent com Subm√≥dulos'
description: 'üöÄ Realiza o build do Parent com GED-CORE e GAP-CORE'
inputs:
  github_token:
    description: 'Token de acesso ao GitHub'
    required: true
outputs:
  core_version:
    description: 'Vers√£o do GED-CORE'
    value: ${{ steps.get_version_core.outputs.core_version }}
  gap_core_version:
    description: 'Vers√£o do GAP-CORE'
    value: ${{ steps.get_version_gap.outputs.gap_core_version }}
runs:
  using: 'composite'
  steps:
    - name: üîí Verificar GitHub Token
      run: |
        if [ -z "${{ inputs.github_token }}" ]; then
          echo "GitHub Token n√£o fornecido."
          exit 1
        else
          echo "GitHub Token est√° presente."
        fi
      shell: bash

    - name: 'Configurar Credenciais para Subm√≥dulos'
      run: |
        git config --global url."https://${{ inputs.github_token }}@github.com/".insteadOf "https://github.com/"
      shell: bash

    - name: 'Set up JDK 17'
      uses: actions/setup-java@v4
      with:
        distribution: 'corretto'
        java-version: '17'

    - name: 'Checkout Reposit√≥rio Parent na Mesma Ref'
      uses: actions/checkout@v3
      with:
        repository: GEDPaciente/mv-ged-parent
        token: ${{ inputs.github_token }}
        ref: ${{ github.ref }}
        path: parent

    - name: 'Atualizar e Inicializar Subm√≥dulo mv-ged-core'
      run: |
        echo "Inicializando e atualizando o subm√≥dulo mv-ged-core"
        cd parent
        git submodule update --init --recursive mv-ged-core
        cd mv-ged-core
        git fetch origin
        git pull origin main
        echo "Subm√≥dulo mv-ged-core atualizado"
        cd ../..
      shell: bash

    - name: 'Atualizar e Inicializar Subm√≥dulo mv-gap-core'
      run: |
        echo "Inicializando e atualizando o subm√≥dulo mv-gap-core"
        cd parent
        git submodule update --init --recursive mv-gap-core
        cd mv-gap-core
        git fetch origin
        git pull origin main
        echo "Subm√≥dulo mv-gap-core atualizado"
        cd ../..
      shell: bash

    - name: 'Verificar vers√£o do GED-CORE no Parent'
      id: get_version_core
      run: |
        cd parent/mv-ged-core
        CORE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "Vers√£o do GED-CORE: $CORE_VERSION"
        echo "core_version=$CORE_VERSION" >> $GITHUB_ENV
        cd ../..

        # Verifica e altera a vers√£o no pom.xml do Parent se necess√°rio
        cd parent
        PARENT_CORE_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        if [ "$PARENT_CORE_VERSION" != "$CORE_VERSION" ]; then
          echo "Atualizando vers√£o do GED-CORE no pom.xml do parent para $CORE_VERSION"
          mvn versions:set -DnewVersion=$CORE_VERSION
          git add pom.xml
          git commit -m "Atualiza vers√£o do GED-CORE para $CORE_VERSION no parent"
        fi
        cd ..
      shell: bash

    - name: 'Verificar vers√£o do GAP-CORE no Parent'
      id: get_version_gap
      run: |
        cd parent/mv-gap-core
        GAP_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "Vers√£o do GAP-CORE: $GAP_VERSION"
        echo "gap_core_version=$GAP_VERSION" >> $GITHUB_ENV
        cd ../..

        # Verifica e altera a vers√£o no pom.xml do Parent se necess√°rio
        cd parent
        PARENT_GAP_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        if [ "$PARENT_GAP_VERSION" != "$GAP_VERSION" ]; then
          echo "Atualizando vers√£o do GAP-CORE no pom.xml do parent para $GAP_VERSION"
          mvn versions:set -DnewVersion=$GAP_VERSION
          git add pom.xml
          git commit -m "Atualiza vers√£o do GAP-CORE para $GAP_VERSION no parent"
        fi
        cd ..
      shell: bash

    - name: 'Build Parent com Subm√≥dulos'
      run: |
        echo "Iniciando build do parent com GED-CORE e GAP-CORE"
        cd parent
        mvn clean install -pl mv-ged-core,mv-gap-core -am -q
        echo "Build do parent conclu√≠do com GED-CORE e GAP-CORE"
        cd ..
      shell: bash

    - name: 'Comitar altera√ß√µes no pom.xml se necess√°rio'
      run: |
        cd parent
        if [ -n "$(git status --porcelain)" ]; then
          echo "Altera√ß√µes detectadas, comitando."
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git commit -m "Atualiza vers√µes dos subm√≥dulos no pom.xml"
          git push origin ${{ github.ref }}
        else
          echo "Nenhuma altera√ß√£o no pom.xml"
        fi
        cd ..
      shell: bash
