name: 'üéõÔ∏è Build Core'
description: 'üöÄ Realiza o build do GED-CORE'
inputs:
  github_token:
    description: 'Token de acesso ao GitHub'
    required: true
outputs:
  core_version:
    description: 'Vers√£o do GED-CORE'
    value: ${{ steps.get_version.outputs.core_version }}
  gap_core_version:
    description: 'Vers√£o do GAP-CORE'
    value: ${{ steps.get_gap_version.outputs.gap_core_version }}
runs:
  using: 'composite'
  steps:
    - name: üîí Verificar GitHub Token
      run: |
        if [ -z "${{ inputs.github_token }}" ]; then
          echo "GitHub Token n√£o fornecido."
          exit 1
        else
          echo "GitHub Token est√° presente."
        fi
      shell: bash

    - name: 'Configurar Credenciais para Subm√≥dulos'
      run: |
        git config --global url."https://${{ inputs.github_token }}@github.com/".insteadOf "https://github.com/"
      shell: bash

    - name: 'Checkout Parent Repository com Subm√≥dulos'
      uses: actions/checkout@v3
      with:
        repository: GEDPaciente/mv-ged-parent
        token: ${{ inputs.github_token }}
        path: parent
        submodules: recursive # Clona os subm√≥dulos (CORE e GAP-CORE)

    - name: 'Set up JDK 17'
      uses: actions/setup-java@v4
      with:
        distribution: 'corretto'
        java-version: '17'

    - name: 'Build GED Core'
      run: |
        echo "Build do GED-CORE"
        cd parent/mv-ged-core
        git checkout ${{ github.ref }}
        git pull
        mvn clean install -N -q
        cd ../..
      shell: bash

    - name: 'Verificar vers√£o GED Core'
      id: get_version
      run: |
        cd parent/mv-ged-core
        CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "Vers√£o do GED-CORE: $CURRENT_VERSION"
        echo "core_version=$CURRENT_VERSION" >> $GITHUB_ENV
        cd ../..
      shell: bash

    - name: 'Build GAP CORE'
      run: |
        echo "Build do GAP-CORE"
        cd parent/mv-gap-core
        git checkout ${{ github.ref }}
        git pull
        mvn clean install -N -q
        cd ../..
      shell: bash

    - name: 'Verificar vers√£o GAP Core'
      id: get_gap_version
      run: |
        cd parent/mv-gap-core
        CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "Vers√£o do GAP-CORE: $CURRENT_VERSION"
        echo "gap_core_version=$CURRENT_VERSION" >> $GITHUB_ENV
        cd ../..
      shell: bash

    - name: 'Atualizar Propriedades no Parent se Necess√°rio'
      run: |
        echo "Verificando necessidade de atualizar as propriedades do parent"
        cd parent

        # Verifica e atualiza a vers√£o do ged.core.version
        if grep -q "<ged.core.version>" pom.xml; then
          CURRENT_GED_CORE_VERSION=$(grep "<ged.core.version>" pom.xml | sed -E 's/.*<ged.core.version>(.*)<\/ged.core.version>.*/\1/')
          if [ "$CURRENT_GED_CORE_VERSION" != "${{ env.core_version }}" ]; then
            echo "Atualizando ged.core.version de $CURRENT_GED_CORE_VERSION para ${{ env.core_version }}"
            sed -i "s|<ged.core.version>$CURRENT_GED_CORE_VERSION</ged.core.version>|<ged.core.version>${{ env.core_version }}</ged.core.version>|g" pom.xml
            UPDATED_GED_CORE=true
          fi
        fi

        # Verifica e atualiza a vers√£o do ged.auth.core.version
        if grep -q "<ged.auth.core.version>" pom.xml; then
          CURRENT_GED_AUTH_CORE_VERSION=$(grep "<ged.auth.core.version>" pom.xml | sed -E 's/.*<ged.auth.core.version>(.*)<\/ged.auth.core.version>.*/\1/')
          if [ "$CURRENT_GED_AUTH_CORE_VERSION" != "${{ env.gap_core_version }}" ]; then
            echo "Atualizando ged.auth.core.version de $CURRENT_GED_AUTH_CORE_VERSION para ${{ env.gap_core_version }}"
            sed -i "s|<ged.auth.core.version>$CURRENT_GED_AUTH_CORE_VERSION</ged.auth.core.version>|<ged.auth.core.version>${{ env.gap_core_version }}</ged.auth.core.version>|g" pom.xml
            UPDATED_GED_AUTH_CORE=true
          fi
        fi

        # Commit das altera√ß√µes se necess√°rio
        if [ "$UPDATED_GED_CORE" == "true" ] || [ "$UPDATED_GED_AUTH_CORE" == "true" ]; then
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add pom.xml
          COMMIT_MESSAGE="Atualiza√ß√£o de vers√µes: "
          if [ "$UPDATED_GED_CORE" == "true" ]; then
            COMMIT_MESSAGE="$COMMIT_MESSAGE ged.core.version para ${{ env.core_version }}"
          fi
          if [ "$UPDATED_GED_AUTH_CORE" == "true" ]; then
            COMMIT_MESSAGE="$COMMIT_MESSAGE, ged.auth.core.version para ${{ env.gap_core_version }}"
          fi
          git commit -m "$COMMIT_MESSAGE"
          git push
        else
          echo "Nenhuma atualiza√ß√£o necess√°ria no pom.xml do parent"
        fi

        cd ..
      shell: bash
