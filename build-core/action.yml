name: '🎛️ Build Parent com Submódulos'
description: '🚀 Realiza o build do Parent com GED-CORE e GAP-CORE'
inputs:
  github_token:
    description: 'Token de acesso ao GitHub'
    required: true
outputs:
  core_version:
    description: 'Versão do GED-CORE'
    value: ${{ steps.get_version_core.outputs.core_version }}
  gap_core_version:
    description: 'Versão do GAP-CORE'
    value: ${{ steps.get_version_gap.outputs.gap_core_version }}
runs:
  using: 'composite'
  steps:
    - name: 🔒 Verificar GitHub Token
      run: |
        if [ -z "${{ inputs.github_token }}" ]; then
          echo "GitHub Token não fornecido."
          exit 1
        else
          echo "GitHub Token está presente."
        fi
      shell: bash

    - name: 'Configurar Credenciais para Submódulos'
      run: |
        git config --global url."https://${{ inputs.github_token }}@github.com/".insteadOf "https://github.com/"
      shell: bash

    - name: 'Set up JDK 17'
      uses: actions/setup-java@v4
      with:
        distribution: 'corretto'
        java-version: '17'

    - name: 'Obter o nome do repositório que disparou a ação'
      run: |
        REPO_NAME=$(basename "${{ github.repository }}")
        echo "O nome do repositório que disparou a action é: $REPO_NAME"
        echo "repo_name=$REPO_NAME" >> $GITHUB_ENV
      shell: bash

    - name: 'Checkout Repositório Parent na Mesma Ref'
      uses: actions/checkout@v3
      with:
        repository: GEDPaciente/mv-ged-parent
        token: ${{ inputs.github_token }}
        ref: ${{ github.ref }}
        path: parent

    - name: 'Atualizar e Inicializar Submódulos'
      run: |
        cd parent
        git submodule update --init --recursive
        git submodule foreach git fetch origin
        git submodule foreach git pull origin ${{ github.ref_name }}
        cd ..
      shell: bash

    - name: 'Verificar versão do GED-CORE no Parent'
      id: get_version_core
      run: |
        cd parent/mv-ged-core
        CORE_VERSION=$(mvn help:evaluate -Dexpression='project.version' -q -DforceStdout)
        echo "Versão do GED-CORE: $CORE_VERSION"
        echo "core_version=$CORE_VERSION" >> $GITHUB_ENV
        cd ../..
      shell: bash

    - name: 'Verificar versão do GAP-CORE no Parent'
      id: get_version_gap
      run: |
        cd parent/mv-gap-core
        GAP_VERSION=$(mvn help:evaluate -Dexpression='project.version' -q -DforceStdout)
        echo "Versão do GAP-CORE: $GAP_VERSION"
        echo "gap_core_version=$GAP_VERSION" >> $GITHUB_ENV
        cd ../..
      shell: bash

    - name: 'Build Parent e Gerar JARs'
      run: |
        cd parent
        mvn clean package -DskipTests -q
        mkdir -p core/target
        cp mv-ged-core/target/*.jar core/target/
        cp mv-gap-core/target/*.jar core/target/
        echo "Arquivos JAR movidos para core/target"
        cp parent/$REPO_NAME module/
        echo "Arquivos do projeto movido para module"
        cd ..
      shell: bash