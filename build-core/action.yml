name: '🎛️ Build Core'
description: '🚀 Realiza o build do GED-CORE'
inputs:
  github_token:
    description: 'Token de acesso ao GitHub'
    required: true
outputs:
  core_version:
    description: 'Versão do GED-CORE'
    value: ${{ steps.get_version.outputs.core_version }}
  gap_core_version:
    description: 'Versão do GAP-CORE'
    value: ${{ steps.get_gap_version.outputs.gap_core_version }}
runs:
  using: 'composite'
  steps:
    - name: 🔒 Verificar GitHub Token
      run: |
        if [ -z "${{ inputs.github_token }}" ]; then
          echo "GitHub Token não fornecido."
          exit 1
        else
          echo "GitHub Token está presente."
        fi
      shell: bash

    - name: 'Checkout Parent Repository com Submódulos'
      uses: actions/checkout@v3
      with:
        repository: GEDPaciente/mv-ged-parent
        token: ${{ inputs.github_token }}
        path: parent
        submodules: recursive # Clona os submódulos (CORE e GAP-CORE)

    - name: 'Set up JDK 17'
      uses: actions/setup-java@v4
      with:
        distribution: 'corretto'
        java-version: '17'

    - name: 'Build GED Core'
      run: |
        echo "Build do GED-CORE"
        cd parent/mv-ged-core
        git pull
        git checkout ${{ github.ref }}
        mvn clean install -N -q
      shell: bash

    - name: 'Verificar versão GED Core'
      id: get_version
      run: |
        cd parent/mv-ged-core
        CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "Versão do GED-CORE: $CURRENT_VERSION"
        echo "core_version=$CURRENT_VERSION" >> $GITHUB_ENV
      shell: bash

    - name: 'Build GAP CORE'
      run: |
        echo "Build do GAP-CORE"
        cd parent/mv-gap-core
        git pull
        git checkout ${{ github.ref }}
        mvn clean install -N -q
      shell: bash

    - name: 'Verificar versão GAP Core'
      id: get_gap_version
      run: |
        cd parent/mv-gap-core
        CURRENT_VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
        echo "Versão do GAP-CORE: $CURRENT_VERSION"
        echo "gap_core_version=$CURRENT_VERSION" >> $GITHUB_ENV
      shell: bash